{
  "Alias": "KrStageGroups",
  "Caption": "$Views_Names_KrStageGroups",
  "Description": "",
  "GroupName": "Kr Wf",
  "ID::uid": "6492b1f7-0fa4-4910-9911-67b2eb1614d7",
  "JsonMetadataSource::txt": "KrStageGroups JSONMETA",
  "MsQuerySource::txt": "KrStageGroups MSSQL",
  "PgQuerySource::txt": "KrStageGroups PGSQL",
  "Roles": null
}

[TEXTPART KrStageGroups JSONMETA]
{
  "Alias": "KrStageGroups",
  "Appearance": null,
  "Appearances": null,
  "AutoSelectFirstRow": true,
  "AutoWidthRowLimit": null,
  "Caption": "$Views_Names_KrStageGroups",
  "Columns": [
    {
      "Alias": "StageGroupID",
      "Appearance": null,
      "CalendarIDColumn": null,
      "CalendarOverdueFormat": null,
      "CalendarQuantsColumn": null,
      "Caption": null,
      "Condition": null,
      "DisableGrouping": false,
      "HasTag": false,
      "Hidden": true,
      "Localizable": false,
      "MaxLength": null,
      "PlannedColumn": null,
      "SortBy": null,
      "TreatValueAsUtc": false,
      "Type": "$KrStageGroups.ID"
    },
    {
      "Alias": "StageGroupName",
      "Appearance": null,
      "CalendarIDColumn": null,
      "CalendarOverdueFormat": null,
      "CalendarQuantsColumn": null,
      "Caption": "$Views_KrStageGroups_Name",
      "Condition": null,
      "DisableGrouping": false,
      "HasTag": false,
      "Hidden": false,
      "Localizable": true,
      "MaxLength": null,
      "PlannedColumn": null,
      "SortBy": "locName.Value",
      "TreatValueAsUtc": false,
      "Type": "$KrStageGroups.Name"
    },
    {
      "Alias": "Description",
      "Appearance": null,
      "CalendarIDColumn": null,
      "CalendarOverdueFormat": null,
      "CalendarQuantsColumn": null,
      "Caption": "$Views_KrStageGroups_Description",
      "Condition": null,
      "DisableGrouping": false,
      "HasTag": false,
      "Hidden": false,
      "Localizable": false,
      "MaxLength": null,
      "PlannedColumn": null,
      "SortBy": null,
      "TreatValueAsUtc": false,
      "Type": "$KrStageGroups.Description"
    },
    {
      "Alias": "IsGroupReadonly",
      "Appearance": null,
      "CalendarIDColumn": null,
      "CalendarOverdueFormat": null,
      "CalendarQuantsColumn": null,
      "Caption": "$Views_KrStageGroups_IsGroupReadonly",
      "Condition": null,
      "DisableGrouping": false,
      "HasTag": false,
      "Hidden": false,
      "Localizable": false,
      "MaxLength": null,
      "PlannedColumn": null,
      "SortBy": null,
      "TreatValueAsUtc": false,
      "Type": "$KrStageGroups.IsGroupReadonly"
    },
    {
      "Alias": "Order",
      "Appearance": null,
      "CalendarIDColumn": null,
      "CalendarOverdueFormat": null,
      "CalendarQuantsColumn": null,
      "Caption": "$Views_KrStageGroups_Order",
      "Condition": null,
      "DisableGrouping": false,
      "HasTag": false,
      "Hidden": false,
      "Localizable": true,
      "MaxLength": null,
      "PlannedColumn": null,
      "SortBy": "ksg.Order",
      "TreatValueAsUtc": false,
      "Type": "Int32 Null"
    },
    {
      "Alias": "Types",
      "Appearance": null,
      "CalendarIDColumn": null,
      "CalendarOverdueFormat": null,
      "CalendarQuantsColumn": null,
      "Caption": "$Views_KrStageGroups_Types",
      "Condition": null,
      "DisableGrouping": false,
      "HasTag": false,
      "Hidden": false,
      "Localizable": true,
      "MaxLength": null,
      "PlannedColumn": null,
      "SortBy": null,
      "TreatValueAsUtc": false,
      "Type": "String(Max) Null"
    },
    {
      "Alias": "Roles",
      "Appearance": null,
      "CalendarIDColumn": null,
      "CalendarOverdueFormat": null,
      "CalendarQuantsColumn": null,
      "Caption": "$Views_KrStageGroups_Roles",
      "Condition": null,
      "DisableGrouping": false,
      "HasTag": false,
      "Hidden": false,
      "Localizable": true,
      "MaxLength": null,
      "PlannedColumn": null,
      "SortBy": null,
      "TreatValueAsUtc": false,
      "Type": "String(Max) Null"
    },
    {
      "Alias": "SecondaryProcessName",
      "Appearance": null,
      "CalendarIDColumn": null,
      "CalendarOverdueFormat": null,
      "CalendarQuantsColumn": null,
      "Caption": "$Views_KrStageGroups_SecondaryProcessCaption",
      "Condition": null,
      "DisableGrouping": false,
      "HasTag": false,
      "Hidden": false,
      "Localizable": true,
      "MaxLength": null,
      "PlannedColumn": null,
      "SortBy": null,
      "TreatValueAsUtc": false,
      "Type": "$KrSecondaryProcesses.Caption"
    }
  ],
  "ConnectionAlias": null,
  "DefaultSortColumns": [
    {
      "Alias": "StageGroupName",
      "SortDirection": "Ascending"
    }
  ],
  "EnableAutoWidth": false,
  "ExportDataPageLimit": null,
  "Extensions": null,
  "FormatVersion::int": 2,
  "GroupingColumn": null,
  "MultiSelect": true,
  "Overrides": null,
  "PageLimit": null,
  "Paging": "Optional",
  "Parameters": [
    {
      "Alias": "StageGroupIDParam",
      "AllowedOperands": null,
      "AutoCompleteInfo": null,
      "Caption": "StageGroupIDParam",
      "Condition": null,
      "DateTimeType": null,
      "DisallowedOperands": null,
      "DropDownInfo": null,
      "Hidden": true,
      "HideAutoCompleteButton": false,
      "IgnoreCase": true,
      "Multiple": false,
      "RefSection": null,
      "TreatValueAsUtc": false,
      "Type": "$KrStageGroups.ID"
    },
    {
      "Alias": "StageGroupNameParam",
      "AllowedOperands": null,
      "AutoCompleteInfo": null,
      "Caption": "$Views_KrStageGroups_Name",
      "Condition": null,
      "DateTimeType": null,
      "DisallowedOperands": null,
      "DropDownInfo": null,
      "Hidden": false,
      "HideAutoCompleteButton": false,
      "IgnoreCase": true,
      "Multiple": true,
      "RefSection": null,
      "TreatValueAsUtc": false,
      "Type": "$KrStageGroups.Name"
    },
    {
      "Alias": "StageGroupDescriptionParam",
      "AllowedOperands": null,
      "AutoCompleteInfo": null,
      "Caption": "$Views_KrStageGroups_Description",
      "Condition": null,
      "DateTimeType": null,
      "DisallowedOperands": null,
      "DropDownInfo": null,
      "Hidden": false,
      "HideAutoCompleteButton": false,
      "IgnoreCase": true,
      "Multiple": true,
      "RefSection": null,
      "TreatValueAsUtc": false,
      "Type": "$KrStageGroups.Description"
    },
    {
      "Alias": "IsGroupReadonlyParam",
      "AllowedOperands": [
        {
          "::single_type": "str"
        },
        "IsTrue",
        "IsFalse"
      ],
      "AutoCompleteInfo": null,
      "Caption": "$Views_KrStageGroups_IsGroupReadonly",
      "Condition": null,
      "DateTimeType": null,
      "DisallowedOperands": null,
      "DropDownInfo": null,
      "Hidden": false,
      "HideAutoCompleteButton": false,
      "IgnoreCase": true,
      "Multiple": true,
      "RefSection": null,
      "TreatValueAsUtc": false,
      "Type": "$KrStageGroups.IsGroupReadonly"
    },
    {
      "Alias": "TypeParam",
      "AllowedOperands": [
        {
          "::single_type": "str"
        },
        "Equality"
      ],
      "AutoCompleteInfo": {
        "ParamAlias": "Caption",
        "PopupColumns": [
          {
            "::single_type": "int"
          },
          2,
          6,
          4
        ],
        "RefPrefix": null,
        "ViewAlias": "KrTypesEffective"
      },
      "Caption": "$Views_KrStageGroups_Types",
      "Condition": null,
      "DateTimeType": null,
      "DisallowedOperands": null,
      "DropDownInfo": {
        "PopupColumns": [
          {
            "::single_type": "int"
          },
          2,
          6,
          4
        ],
        "RefPrefix": null,
        "ViewAlias": "KrTypesEffective"
      },
      "Hidden": false,
      "HideAutoCompleteButton": false,
      "IgnoreCase": true,
      "Multiple": true,
      "RefSection": [
        {
          "::single_type": "str"
        },
        "KrCardTypesVirtual"
      ],
      "TreatValueAsUtc": false,
      "Type": "$KrStageTypes.TypeID"
    },
    {
      "Alias": "RoleParam",
      "AllowedOperands": [
        {
          "::single_type": "str"
        },
        "Equality"
      ],
      "AutoCompleteInfo": {
        "ParamAlias": "Name",
        "PopupColumns": [
          {
            "::single_type": "int"
          },
          1,
          3
        ],
        "RefPrefix": null,
        "ViewAlias": "Roles"
      },
      "Caption": "$Views_KrStageGroups_Roles",
      "Condition": null,
      "DateTimeType": null,
      "DisallowedOperands": null,
      "DropDownInfo": null,
      "Hidden": false,
      "HideAutoCompleteButton": false,
      "IgnoreCase": true,
      "Multiple": true,
      "RefSection": [
        {
          "::single_type": "str"
        },
        "Roles"
      ],
      "TreatValueAsUtc": false,
      "Type": "$KrStageRoles.RoleID"
    },
    {
      "Alias": "StartupParam",
      "AllowedOperands": null,
      "AutoCompleteInfo": null,
      "Caption": "$Views_KrStageTemplates_ByStartupTypeSubset",
      "Condition": null,
      "DateTimeType": null,
      "DisallowedOperands": null,
      "DropDownInfo": null,
      "Hidden": true,
      "HideAutoCompleteButton": false,
      "IgnoreCase": true,
      "Multiple": false,
      "RefSection": null,
      "TreatValueAsUtc": false,
      "Type": "$KrStageGroups.KrSecondaryProcessID"
    }
  ],
  "QuickSearchParam": "StageGroupNameParam",
  "References": [
    {
      "CardType": null,
      "CardTypeColumn": null,
      "ColPrefix": "StageGroup",
      "Condition": null,
      "DisplayValueColumn": "StageGroupName",
      "IsCard": true,
      "OpenOnDoubleClick": true,
      "RefSection": [
        {
          "::single_type": "str"
        },
        "KrStageGroups"
      ]
    }
  ],
  "RowCountSubset": "Count",
  "RowCounterVisible": false,
  "SelectionMode": "Row",
  "Subsets": [
    {
      "Alias": "ByType",
      "Caption": "$Views_KrStageGroups_ByTypeSubset",
      "CaptionColumn": "TypeCaption",
      "Condition": null,
      "CountColumn": null,
      "HideZeroCount": false,
      "Kind": "List",
      "RefColumn": "TypeID",
      "RefParam": "TypeParam",
      "TreeHasChildrenColumn": null,
      "TreeRefParam": null
    },
    {
      "Alias": "ByStartupType",
      "Caption": "$Views_KrStageGroups_ByStartupTypeSubset",
      "CaptionColumn": "StartupName",
      "Condition": null,
      "CountColumn": null,
      "HideZeroCount": false,
      "Kind": "List",
      "RefColumn": "StartupID",
      "RefParam": "StartupParam",
      "TreeHasChildrenColumn": null,
      "TreeRefParam": null
    },
    {
      "Alias": "Count",
      "Caption": null,
      "CaptionColumn": null,
      "Condition": null,
      "CountColumn": null,
      "HideZeroCount": false,
      "Kind": "List",
      "RefColumn": null,
      "RefParam": null,
      "TreeHasChildrenColumn": null,
      "TreeRefParam": null
    }
  ],
  "TagsPosition": "None",
  "TreatAsSingleQuery": true,
  "TreeGroup": null,
  "TreeGroupDisplayValue": null,
  "TreeGroupId": null,
  "TreeGroupParentId": null,
  "TreeId": null,
  "TreeParentId": null
}

[TEXTPART KrStageGroups MSSQL]
SELECT
	#if(Normal) {
	[t].[StageGroupID],
	[t].[StageGroupName],
	[t].[Description],
	[t].[IsGroupReadonly],
	[t].[Order],
	[t].[Types],
	[t].[Roles],
	[t].[SecondaryProcessName]
	}
	#if(ByStartupType) {
	[t].[StartupID],
	[t].[StartupName]
	}
	#if(ByType || Count) {
	[t].*
	}
FROM (
	#if(ByType) {
	SELECT TOP(1)
		'00000000-0000-0000-0000-000000000000' AS [TypeID],
		[locTypeCaption].[Value] AS [TypeCaption]
	FROM [KrStageGroups] AS [ksg] WITH (NOLOCK)
	CROSS APPLY [Localization](N'$Views_KrStageTemplatesKrStageGroups_Any', #param(locale)) AS [locTypeCaption]
	LEFT JOIN [KrStageTypes] AS [kst] WITH (NOLOCK) ON [kst].[ID] = [ksg].[ID] 
	WHERE [kst].[RowID] IS NULL
	UNION ALL
	}
	#if(ByStartupType) {
	SELECT TOP(1)
		NULL AS [StartupID],
		[locStartupName].[Value] AS [StartupName],
		2 AS [IsGlobal] -- первая строка будет выше, чем IsGlobal=0/1
	FROM [KrStageGroups] AS [ksg] WITH (NOLOCK)
	CROSS APPLY [Localization](N'$Views_KrStageTemplatesKrStageGroups_MainRoute', #param(locale)) AS [locStartupName]
	WHERE [ksg].[KrSecondaryProcessID] IS NULL
	UNION ALL
	}
	SELECT
		#if(Normal) {
		[ksg].[ID] AS [StageGroupID],
		[ksg].[Name] AS [StageGroupName],
		[ksg].[Description],
		[ksg].[IsGroupReadonly],
		[ksg].[Order],
		STUFF((
			SELECT CHAR(10) +
				CASE WHEN substring([stt].[TypeCaption], 1, 1) = N'$'
					THEN N'{' + [stt].[TypeCaption] + N'}'
					ELSE [stt].[TypeCaption]
				END
			FROM [KrStageTypes] AS [stt] WITH (NOLOCK)
			WHERE [stt].[ID] = [ksg].[ID]
			FOR XML PATH('')
		), 1, 1, N'') AS [Types],
		STUFF((
			SELECT char(10) + 
			CASE WHEN substring([str].[RoleName], 1, 1) = N'$'
					THEN N'{' + [str].[RoleName] + N'}'
					ELSE [str].[RoleName]
				END
			FROM [KrStageRoles] AS [str] WITH (NOLOCK)
			WHERE [str].[ID] = [ksg].[ID]
			FOR XML PATH('')
		), 1, 1, N'') AS [Roles],
		[ksg].[KrSecondaryProcessName] AS [SecondaryProcessName],
		row_number() OVER (ORDER BY #order_by) AS [rn]
		}
		#if(ByType) {
		DISTINCT
		[stt].[TypeID] AS [TypeID],
		[locTypeCaption].[Value] AS [TypeCaption]
		}
		#if(ByStartupType) {
		DISTINCT
		[ksg].[KrSecondaryProcessID] AS [StartupID],
		[locStartupName].[Value] AS [StartupName],
		CAST([ksp].[IsGlobal] AS int) AS [IsGlobal]
		}
		#if(Count) {
		count(*) AS [cnt]
		}
	FROM [KrStageGroups] AS [ksg] WITH (NOLOCK)
	#if(ByType) {
	INNER JOIN [KrStageTypes] AS [stt] WITH (NOLOCK) ON [ksg].[ID] = [stt].[ID]
	CROSS APPLY [Localization]([stt].[TypeCaption], #param(locale)) AS [locTypeCaption]
	}
	#if(ByStartupType) {
	INNER JOIN [KrSecondaryProcesses] AS [ksp] ON [ksg].[KrSecondaryProcessID] = [ksp].[ID]
	CROSS APPLY [Localization]([ksg].[KrSecondaryProcessName], #param(locale)) AS [locStartupName]
	}
	#if (StageGroupNameParam || Normal && request.SortedBy("StageGroupName")) {
	CROSS APPLY [Localization]([ksg].[Name], #param(locale)) AS [locName]
	}
	WHERE 1 = 1
		#param(StageGroupIDParam, [ksg].[ID])
		#param(StageGroupNameParam, [locName].[Value])
		#param(StageGroupDescriptionParam, [ksg].[Description])
		#param(IsGroupReadonlyParam, [ksg].[IsGroupReadonly])
		#param(StartupParam, [ksg].[KrSecondaryProcessID])
		#if(TypeParam) {
			AND (EXISTS (
					SELECT NULL
					FROM [KrStageTypes] AS [stt]
					WHERE [stt].[ID] = [ksg].[ID]
						#param(TypeParam, [stt].[TypeID])
				) 
				OR NOT EXISTS (
					SELECT NULL
					FROM [KrStageTypes] AS [stt]
					WHERE [stt].[ID] = [ksg].[ID]
				)
			)
		}
		#if(RoleParam) {
		AND EXISTS (
			SELECT NULL
			FROM [KrStageRoles] AS [str] WITH (NOLOCK)
			WHERE [str].[ID] = [ksg].[ID]
				#param(RoleParam, [str].[RoleID])
			)
		}
		#if(ByStartupType) { 
		AND [ksg].[KrSecondaryProcessID] IS NOT NULL
		}
	
		
	) AS [t]
#if(PageOffset) {
WHERE [t].[rn] >= #param(PageOffset) AND [t].[rn] < (#param(PageOffset) + #param(PageLimit))
}
#if(Normal) {
ORDER BY [t].[rn]
}
#if(ByType) {
ORDER BY [t].[TypeCaption]
}
#if(ByStartupType) {
ORDER BY [t].[IsGlobal] DESC, [t].[StartupName]
}


[TEXTPART KrStageGroups PGSQL]
#if(ByType) {
SELECT "t".*
FROM (

(
SELECT
	'00000000-0000-0000-0000-000000000000' AS "TypeID",
	"locTypeCaption"."Value" AS "TypeCaption"
FROM "KrStageGroups" AS "ksg"
CROSS JOIN "Localization"('$Views_KrStageTemplatesKrStageGroups_Any', #param(locale)) AS "locTypeCaption"
LEFT JOIN "KrStageTypes" AS "kst" USING("ID")
WHERE "kst"."RowID" IS NULL
LIMIT 1
)
UNION ALL
}
#if(ByStartupType) {
(
SELECT
	NULL AS "StartupID",
	"locStartupName"."Value" AS "StartupName"
FROM "KrStageGroups" AS "ksg"
CROSS JOIN "Localization"('$Views_KrStageTemplatesKrStageGroups_MainRoute', #param(locale)) AS "locStartupName"
WHERE "KrSecondaryProcessID" IS NULL
LIMIT 1
)
UNION ALL
}
(
SELECT
	#if(Normal) {
	"ksg"."ID" as "StageGroupID",
	"ksg"."Name" as "StageGroupName",
	"ksg"."Description",
	"ksg"."IsGroupReadonly",
	"ksg"."Order",
	(
		SELECT string_agg("TypeCaption", chr(10))
		FROM (
			SELECT
				CASE WHEN substring("stt"."TypeCaption", 1, 1) = '$'
					THEN '{' || "stt"."TypeCaption" || '}'
					ELSE "stt"."TypeCaption"
				END
			FROM "KrStageTypes" AS "stt"
			WHERE "stt"."ID" = "ksg"."ID") AS "captions"
	) AS "Types",
	(
		SELECT string_agg("RoleName", chr(10))
		FROM (
			SELECT
				CASE WHEN substring("str"."RoleName", 1, 1) = '$'
					THEN '{' || "str"."RoleName" || '}'
					ELSE "str"."RoleName"
				END
			FROM "KrStageRoles" AS "str"
			WHERE "str"."ID" = "ksg"."ID") AS "names"
	) AS "Roles",
	"ksg"."KrSecondaryProcessName" AS "SecondaryProcessName"
	}
	#if(ByStartupType) {
	"ksg"."KrSecondaryProcessID" AS "StartupID",
	"locStartupName" AS "StartupName"
	}
	#if(ByType) {
	DISTINCT
	"stt"."TypeID" AS "TypeID",
	"locTypeCaption" AS "TypeCaption"
	}
	#if(Count) {
	count(*) AS "cnt"
	}

FROM "KrStageGroups" AS "ksg"
#if(ByType) {
INNER JOIN "KrStageTypes" AS "stt" USING("ID")
CROSS JOIN "Localization"("stt"."TypeCaption", #param(locale)) AS "locTypeCaption"
}
#if(ByStartupType) {
INNER JOIN "KrSecondaryProcesses" AS "ksp" ON "ksg"."KrSecondaryProcessID" = "ksp"."ID"
CROSS JOIN "Localization"("ksg"."KrSecondaryProcessName", #param(locale)) AS "locStartupName"
}
#if (StageGroupNameParam || Normal && request.SortedBy("StageGroupName")) {
CROSS JOIN "Localization"("ksg"."Name", #param(locale)) AS "locName"
}
WHERE true
	#param(StageGroupIDParam, "ksg"."ID")
	#param(StageGroupNameParam, "locName"."Value")
	#param(StageGroupDescriptionParam, "ksg"."Description")
	#param(IsGroupReadonlyParam, "ksg"."IsGroupReadonly")
	#param(StartupParam, "ksg"."KrSecondaryProcessID")
	#if(TypeParam) {
		AND (EXISTS (
				SELECT NULL
				FROM "KrStageTypes" AS "stt"
				WHERE "stt"."ID" = "ksg"."ID"
					#param(TypeParam, "stt"."TypeID")
			) 
			OR NOT EXISTS (
				SELECT NULL
				FROM "KrStageTypes" AS "stt" 
				WHERE "stt"."ID" = "ksg"."ID"
			)
		)
	}
	#if(RoleParam) {
	AND EXISTS (
		SELECT NULL
		FROM "KrStageRoles" AS "str"
		WHERE "str"."ID" = "ksg"."ID"
			#param(RoleParam, "str"."RoleID")
		)
	}
	#if(ByStartupType) { 
	AND "ksg"."KrSecondaryProcessID" IS NOT NULL
	}
#if(Normal) {
ORDER BY #order_by
}
#if(ByStartupType) { 
GROUP BY "ksg"."KrSecondaryProcessID", "locStartupName"."Value", "ksp"."IsGlobal"::int 
ORDER BY "ksp"."IsGlobal"::int DESC, "locStartupName"."Value"
}
#if(PageOffset) {
OFFSET #param(PageOffset) - 1 LIMIT #eval(PageLimit.Value)
}
)
#if(ByType) {
) AS "t"
ORDER BY "t"."TypeCaption"
}