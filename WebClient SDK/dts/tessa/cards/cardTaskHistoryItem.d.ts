import { CardTaskHistoryState } from './cardTaskHistoryState';
import { CardInfoStorageObject } from './cardInfoStorageObject';
import { IStorage, IStorageValueFactory } from 'tessa/platform/storage';
export declare class CardTaskHistoryItem extends CardInfoStorageObject {
    constructor(storage: IStorage);
    static readonly rowIdKey: string;
    static readonly typeIdKey: string;
    static readonly typeNameKey: string;
    static readonly typeCaptionKey: string;
    static readonly optionIdKey: string;
    static readonly optionNameKey: string;
    static readonly optionCaptionKey: string;
    static readonly userIdKey: string;
    static readonly userNameKey: string;
    static readonly authorIdKey: string;
    static readonly authorNameKey: string;
    static readonly resultKey: string;
    static readonly createdKey: string;
    static readonly plannedKey: string;
    static readonly inProgressKey: string;
    static readonly completedKey: string;
    static readonly completedByIdKey: string;
    static readonly completedByNameKey: string;
    static readonly completedByRoleKey: string;
    static readonly parentRowIdKey: string;
    static readonly systemStateKey: string;
    static readonly groupRowIdKey: string;
    static readonly timeZoneIdKey = "TimeZoneID";
    static readonly timeZoneUtcOffsetMinutesKey = "TimeZoneUtcOffsetMinutes";
    static readonly kindIdKey = "KindID";
    static readonly kindCaptionKey = "KindCaption";
    static readonly calendarIdKey = "CalendarID";
    static readonly settingsKey = "Settings";
    static readonly assignedOnRoleKey = "AssignedOnRole";
    get rowId(): guid;
    set rowId(value: guid);
    get typeId(): guid;
    set typeId(value: guid);
    get typeName(): string;
    set typeName(value: string);
    get typeCaption(): string;
    set typeCaption(value: string);
    get optionId(): guid | null;
    set optionId(value: guid | null);
    get optionName(): string | null;
    set optionName(value: string | null);
    get optionCaption(): string | null;
    set optionCaption(value: string | null);
    get userId(): guid | null;
    set userId(value: guid | null);
    get userName(): string | null;
    set userName(value: string | null);
    get authorId(): guid | null;
    set authorId(value: guid | null);
    get authorName(): string | null;
    set authorName(value: string | null);
    get result(): string | null;
    set result(value: string | null);
    get created(): string;
    set created(value: string);
    get planned(): string;
    set planned(value: string);
    get inProgress(): string | null;
    set inProgress(value: string | null);
    get completed(): string | null;
    set completed(value: string | null);
    get completedById(): guid | null;
    set completedById(value: guid | null);
    get completedByName(): string | null;
    set completedByName(value: string | null);
    get completedByRole(): string | null;
    set completedByRole(value: string | null);
    get parentRowId(): guid | null;
    set parentRowId(value: guid | null);
    get state(): CardTaskHistoryState;
    set state(value: CardTaskHistoryState);
    get groupRowId(): guid | null;
    set groupRowId(value: guid | null);
    get timeZoneId(): number | null;
    set timeZoneId(value: number | null);
    get timeZoneUtcOffsetMinutes(): number | null;
    set timeZoneUtcOffsetMinutes(value: number | null);
    get kindId(): guid | null;
    set kindId(value: guid | null);
    get kindCaption(): string;
    set kindCaption(value: string);
    get calendarId(): guid | null;
    set calendarId(value: guid | null);
    get settings(): IStorage | null;
    set settings(value: IStorage | null);
    get assignedOnRole(): string | null;
    set assignedOnRole(value: string | null);
    hasChanges(): boolean;
    removeChanges(): boolean;
    isEmpty(): boolean;
}
export declare class CardTaskHistoryItemFactory implements IStorageValueFactory<CardTaskHistoryItem> {
    getValue(storage: IStorage): CardTaskHistoryItem;
    getValueAndStorage(): {
        value: CardTaskHistoryItem;
        storage: IStorage;
    };
}
