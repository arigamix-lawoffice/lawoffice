import { CardFile } from './cardFile';
import { CardTask } from './cardTask';
import { CardInfoStorageObject } from './cardInfoStorageObject';
import { CardInstanceType } from './cardInstanceType';
import { CardSection } from './cardSection';
import { CardStoreMethod } from './cardStoreMethod';
import { CardStoreMode } from './cardStoreMode';
import { CardPermissionInfo } from './cardPermissionInfo';
import { CardTaskHistoryItem } from './cardTaskHistoryItem';
import { CardRemoveChangesDeletedHandling } from './cardRemoveChangesDeletedHandling';
import { ICloneable } from 'tessa/platform';
import { MapStorage, IStorage, ArrayStorage } from 'tessa/platform/storage';
import { CardTaskHistoryGroup } from 'tessa/cards/cardTaskHistoryGroup';
import { TopicModel } from 'tessa/forums';
export declare class Card extends CardInfoStorageObject implements ICloneable<Card> {
    constructor(storage?: IStorage);
    private _instanceType;
    get instanceType(): CardInstanceType;
    set instanceType(value: CardInstanceType);
    get storeMode(): CardStoreMode;
    static readonly idKey: string;
    static readonly typeIdKey: string;
    static readonly typeNameKey: string;
    static readonly typeCaptionKey: string;
    static readonly createdKey: string;
    static readonly createdByIdKey: string;
    static readonly createdByNameKey: string;
    static readonly modifiedKey: string;
    static readonly modifiedByIdKey: string;
    static readonly modifiedByNameKey: string;
    static readonly flagsKey: string;
    static readonly versionKey: string;
    static readonly sectionsKey: string;
    static readonly filesKey: string;
    static readonly tasksKey: string;
    static readonly taskHistoryKey: string;
    static readonly taskHistoryGroupsKey: string;
    static readonly permissionsKey: string;
    static readonly topicsKey: string;
    get id(): guid;
    set id(value: guid);
    get typeId(): guid;
    set typeId(value: guid);
    get typeName(): string;
    set typeName(value: string);
    get typeCaption(): string;
    set typeCaption(value: string);
    get created(): string | null;
    set created(value: string | null);
    get createdById(): guid;
    set createdById(value: guid);
    get createdByName(): string;
    set createdByName(value: string);
    get modified(): string | null;
    set modified(value: string | null);
    get modifiedById(): guid;
    set modifiedById(value: guid);
    get modifiedByName(): string;
    set modifiedByName(value: string);
    get flags(): number;
    set flags(value: number);
    get version(): number;
    set version(value: number);
    get sections(): MapStorage<CardSection>;
    set sections(value: MapStorage<CardSection>);
    get files(): ArrayStorage<CardFile>;
    set files(value: ArrayStorage<CardFile>);
    get tasks(): ArrayStorage<CardTask>;
    set tasks(value: ArrayStorage<CardTask>);
    get taskHistory(): ArrayStorage<CardTaskHistoryItem>;
    set taskHistory(value: ArrayStorage<CardTaskHistoryItem>);
    get taskHistoryGroups(): ArrayStorage<CardTaskHistoryGroup>;
    set taskHistoryGroups(value: ArrayStorage<CardTaskHistoryGroup>);
    get permissions(): CardPermissionInfo;
    set permissions(value: CardPermissionInfo);
    get topics(): ArrayStorage<TopicModel>;
    set topics(value: ArrayStorage<TopicModel>);
    tryGetSections(): MapStorage<CardSection> | null | undefined;
    tryGetFiles(): ArrayStorage<CardFile> | null | undefined;
    tryGetTasks(): ArrayStorage<CardTask> | null | undefined;
    tryGetTaskHistory(): ArrayStorage<CardTaskHistoryItem> | null | undefined;
    tryGetTaskHistoryGroups(): ArrayStorage<CardTaskHistoryGroup> | null | undefined;
    tryGetPermissions(): CardPermissionInfo | null | undefined;
    tryGetTopics(): ArrayStorage<TopicModel> | null | undefined;
    private static readonly _sectionFactory;
    private static readonly _fileFactory;
    private static readonly _taskFactory;
    private static readonly _taskHistoryFactory;
    private static readonly _taskHistoryGroupsFactory;
    private static readonly _topicsFactory;
    removeAllButChanged(storeMode?: CardStoreMode, storeMethod?: CardStoreMethod): void;
    private removeAllSectionsButChanged;
    private removeAllFilesButChanged;
    private removeAllTasksButChanged;
    static fromJSON(json: string): Card;
    toJSON(): string;
    hasChanges(checkStates?: boolean): boolean;
    removeChanges(deletedHandling?: CardRemoveChangesDeletedHandling): boolean;
    updateStates(): boolean;
    ensureCacheResolved(): void;
    clone(): Card;
    isEmpty(): boolean;
    clean(): void;
}
