import { StorageObject, IStorage } from 'tessa/platform/storage';
export declare class KrPermissionSectionSettings extends StorageObject {
    constructor(storage?: IStorage);
    static readonly idKey: string;
    static readonly flagKey: string;
    static readonly allowedFieldsKey: string;
    static readonly disallowedFieldsKey: string;
    static readonly hiddenFieldsKey: string;
    static readonly visibleFieldsKey: string;
    static readonly mandatoryFieldsKey: string;
    static readonly maskedFieldsKey: string;
    private _allowedFields;
    private _disallowedFields;
    private _hiddenFields;
    private _visibleFields;
    private _mandatoryFields;
    private _maskedFields;
    get id(): guid;
    set id(value: guid);
    private get flag();
    private set flag(value);
    get disallowRowAdding(): boolean;
    set disallowRowAdding(value: boolean);
    get disallowRowDeleting(): boolean;
    set disallowRowDeleting(value: boolean);
    get isAllowed(): boolean;
    set isAllowed(value: boolean);
    get isDisallowed(): boolean;
    set isDisallowed(value: boolean);
    get isHidden(): boolean;
    set isHidden(value: boolean);
    get isMandatory(): boolean;
    set isMandatory(value: boolean);
    get isMasked(): boolean;
    set isMasked(value: boolean);
    get allowedFields(): guid[];
    set allowedFields(value: guid[]);
    get disallowedFields(): guid[];
    set disallowedFields(value: guid[]);
    get hiddenFields(): guid[];
    set hiddenFields(value: guid[]);
    get visibleFields(): guid[];
    set visibleFields(value: guid[]);
    get mandatoryFields(): guid[];
    set mandatoryFields(value: guid[]);
    get maskedFields(): guid[];
    set maskedFields(value: guid[]);
}
