import { IContentProvider } from './contentProvider';
import { IViewParameters } from './parameters';
import { IWorkplaceViewModel } from './workplaceViewModel';
import { WorkplaceLayoutViewModel } from './workplaceLayoutViewModel';
import { IWorkplaceViewComponent } from './workplaceViewComponent';
import { DoubleClickAction } from './doubleClickInfo';
import { IViewContext } from './viewContext';
import { SelectAction } from './selectFromViewContext';
import { DataNodeMetadataSealed } from 'tessa/views/workplaces';
import { SortingColumn } from 'tessa/views/sortingColumn';
import { ViewParameterMetadataSealed } from 'tessa/views/metadata';
export declare class DefaultContentProvider implements IContentProvider<WorkplaceLayoutViewModel | null> {
    constructor(workplace: IWorkplaceViewModel, metadata: DataNodeMetadataSealed, parameters: IViewParameters | null | undefined, parametersFactory: (p: ViewParameterMetadataSealed[]) => IViewParameters, doubleClickAction?: DoubleClickAction | null, refSection?: ReadonlyArray<string> | null, selectAction?: SelectAction | null, sortingColumns?: Map<guid, SortingColumn[]> | null, isCloneCreation?: boolean);
    private _workplace;
    private _metadata;
    private _viewContext;
    private _parameters;
    private _parametersFactory;
    private _doubleClickAction;
    private _refSection;
    private _selectAction;
    private _sortingColumns;
    private _child;
    private _creationStrategy;
    private _isCloneCreation;
    readonly viewModel: WorkplaceLayoutViewModel | null;
    get viewContext(): IViewContext | null;
    get components(): ReadonlyMap<guid, IWorkplaceViewComponent>;
    refresh(_force?: boolean): Promise<void>;
    dispose(): void;
    private initializeChild;
    private initializeContent;
    private buildLayout;
    private createLayout;
    private generateLayoutContent;
    private placeContentInLayout;
    private placeMultipleItemsInLayout;
    private tryGetFirstVisibleContext;
    private createViewComponent;
    private createParameters;
    private createSortingColumns;
    private handleSelectionContextAction;
}
