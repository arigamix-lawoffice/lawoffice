import { TaskHistoryItemInfo } from './taskHistoryHelper';
import { CardTaskHistoryItem } from 'tessa/cards';
import { ArrayStorage } from 'tessa/platform/storage/arrayStorage';
import { TaskHistoryViewModel } from 'tessa/ui/cards/tasks/taskHistoryViewModel';
import { TaskHistoryTagViewModel } from 'tessa/ui/cards/tasks/taskHistoryTagViewModel';
import React from 'react';
import { ClassNameList } from 'tessa/ui/classNameList';
export declare class TaskHistoryItemViewModel {
    constructor(model: CardTaskHistoryItem, childModels: ArrayStorage<CardTaskHistoryItem>, taskHistory: TaskHistoryViewModel);
    private readonly _childModels;
    private readonly _taskHistory;
    private readonly _rowId;
    private readonly _typeId;
    private readonly _parentRowId;
    private _state;
    private _stateDate;
    private _roleName;
    private _authorName;
    private _optionCaption;
    private _userName;
    private _result;
    private _created;
    private _planned;
    private _inProgress;
    private _completed;
    private _completedByName;
    private _typeCaption;
    private _groupRowId;
    private _toolTip;
    private _childTasks;
    private _style?;
    readonly model: CardTaskHistoryItem;
    get rowId(): string;
    get typeId(): string;
    get parentRowId(): string | null;
    get state(): string;
    set state(value: string);
    get stateDate(): string | null;
    set stateDate(value: string | null);
    get roleName(): string;
    set roleName(value: string);
    get authorName(): string;
    set authorName(value: string);
    get optionCaption(): string;
    set optionCaption(value: string);
    get userName(): string;
    set userName(value: string);
    get result(): string;
    set result(value: string);
    get created(): string;
    set created(value: string);
    get planned(): string;
    set planned(value: string);
    get inProgress(): string | null;
    set inProgress(value: string | null);
    get completed(): string | null;
    set completed(value: string | null);
    get completedByName(): string | null;
    set completedByName(value: string | null);
    get typeCaption(): TaskHistoryTagViewModel;
    set typeCaption(value: TaskHistoryTagViewModel);
    get groupRowId(): string | null;
    get toolTip(): string;
    get childTasks(): ArrayStorage<TaskHistoryItemViewModel>;
    get style(): React.CSSProperties | undefined;
    set style(value: React.CSSProperties | undefined);
    readonly className: ClassNameList;
    setTag(iconKey: string, tooltip: string, handler: Function): void;
    getAsTaskHistoryItemInfo(): TaskHistoryItemInfo;
    private getPerformerRole;
    private getAuthorRole;
}
