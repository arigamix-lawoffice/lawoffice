export declare enum TaskActionType {
    /**
     * Завершает задание по указанному варианту завершения.
     */
    Complete = 0,
    /**
     * Отображает форму задания, привязанную к варианту завершения.
     */
    NavigateToForm = 1,
    /**
     * Взять задание в работу.
     */
    Progress = 2,
    /**
     * Перевести задание на себя.
     */
    TakeOver = 3,
    /**
     * Вернуть задание на роль.
     */
    Reinstate = 4,
    /**
     * Отложить задание.
     */
    Postpone = 5,
    /**
     * При следующем открытии карточки сделать задание доступным для действий исполнителя функциональной роли со скрытыми по умолчанию вариантами завершения.
     * Карточка при этом сохраняется с последующим открытием.
     */
    UnlockForPerformer = 6,
    /**
     * При следующем открытии карточки сделать задание недоступным для действий исполнителя функциональной роли со скрытыми по умолчанию вариантами завершения.
     * Карточка при этом сохраняется с последующим открытием.
     */
    LockForPerformer = 7,
    /**
     * Отображает формы с параметрами откладывания задания.
     */
    NavigateToPostpone = 8,
    /**
     * Назад из формы варианта завершения к форме задания по умолчанию.
     */
    NavigateBack = 9,
    /**
     * Возвращает задание из отозванного состояния.
     */
    ReturnFromPostponed = 10,
    /**
     * Дополнительные действия с заданием, сгруппированные в контекстном меню.
     */
    AdditionalActions = 11,
    /**
     * Разделитель между различными действиями. Отображается в списке дополнительных действий.
     */
    Separator = 12,
    /**
     * Прочее действие. Обычно добавляется расширением.
     */
    Custom = 13
}
