import { TaskNavigator } from './taskNavigator';
import { TaskAction } from './taskAction';
import { TaskGroupingType } from './taskGroupingType';
import { CardTask } from 'tessa/cards';
import { ICardModel } from 'tessa/ui/cards/interfaces';
import { CardTypeCompletionOptionSealed } from 'tessa/cards/types';
export declare function saveCardWithTaskModifier(taskModel: ICardModel, taskModifierAction?: (task: CardTask) => void): Promise<void>;
export declare function navigateToMainState(navigator: TaskNavigator): void;
export declare function navigateToCompletionOption(completionOption: CardTypeCompletionOptionSealed, navigator: TaskNavigator, backAction?: (navigator: TaskNavigator) => void): void;
export declare function navigateToReturnFromPostponedState(navigator: TaskNavigator): void;
export declare function navigateToLockedForPerformerState(navigator: TaskNavigator): void;
export declare function navigateToLockedState(navigator: TaskNavigator): void;
export declare function navigateToInitialState(navigator: TaskNavigator): void;
export declare function navigateToPostponeState(navigator: TaskNavigator): void;
export declare function createCompleteAction(completionOption: CardTypeCompletionOptionSealed, navigator: TaskNavigator, groupingType?: TaskGroupingType, backAction?: (navigator: TaskNavigator) => void): TaskAction;
export declare function createReturnFromPostponedAction(navigator: TaskNavigator): TaskAction;
export declare function createUnlockForPerformerAction(navigator: TaskNavigator): TaskAction;
export declare function createProgressAction(navigator: TaskNavigator): TaskAction;
export declare function createNavigateBackAction(navigator: TaskNavigator, backAction?: (navigator: TaskNavigator) => void): TaskAction;
export declare function createLockForPerformerAction(navigator: TaskNavigator): TaskAction;
export declare function createNavigateToPostponeAction(navigator: TaskNavigator): TaskAction;
export declare function createPostponeAction(navigator: TaskNavigator): TaskAction;
export declare function createReinstateAction(navigator: TaskNavigator): TaskAction;
export declare function getCaptionWithRightArrow(caption: string): string;
export declare function getCaptionWithLeftArrow(caption: string): string;
export declare function createTakeOverAction(navigator: TaskNavigator): TaskAction;
