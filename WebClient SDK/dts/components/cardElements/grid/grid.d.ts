import React, { KeyboardEvent } from 'react';
import { IGridColumnInfo, IGridProps, IGridState } from './interfaces';
declare class GridInternal extends React.Component<IGridProps, IGridState> {
    constructor(props: IGridProps);
    static defaultProps: Partial<IGridProps>;
    private _draggedHeader?;
    private _handlers;
    private _layouts;
    private _unmounted;
    private _resizeCallsCount;
    private _checkActiveRowScroll;
    componentWillUnmount(): void;
    focus(opt?: FocusOptions): void;
    remeasure: () => void;
    private handleResize;
    initLayouts(): void;
    private convertToInternalLayout;
    private getLayout;
    private isColumnOverflown;
    private handleScrollToActiveRow;
    handleKeyDown: (event: React.KeyboardEvent, columnInfo: IGridColumnInfo) => void;
    private handleHeaderDragStart;
    private handleHeaderDragOver;
    private handleHeaderDrop;
    private handleHeaderDragEnd;
    private handleBlockContextMenu;
    private handleRowContextMenu;
    private handleRowSelect;
    private handleCellContextMenu;
    private handleColumnContextMenu;
    private handleClick;
    private handleDoubleClick;
    private handleMouseDown;
    private handleDoubleMouseDown;
    private handleCellClick;
    private handleCellDoubleClick;
    private handleCellMouseDown;
    private handleRowClick;
    private handleRowDoubleClick;
    private handleScrollExtremePosition;
    private handleRowTagDropdownContextMenu;
    render(): JSX.Element;
    private getOrderedRows;
}
declare const GridWrapper: React.ForwardRefExoticComponent<IGridProps & React.RefAttributes<GridInternal>>;
export default GridWrapper;
